name: Build and Test clip_share_server
run-name: Build and Test on ${{ github.sha }}

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  Sonarcloud-Analysis:
    runs-on: ubuntu-20.04
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          ref: ${{github.head_ref}}
          fetch-depth: 0
          repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install Dependencies
        run: sudo apt-get -y install gcc make libc6-dev libx11-dev libxmu-dev libpng-dev libssl-dev
      - name: Install sonar-scanner and build-wrapper
        uses: SonarSource/sonarcloud-github-c-cpp@v1
      - name: Run build-wrapper
        run: |
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} make
      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}"
  Build-and-Test-on-Ubuntu:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository code
      uses: actions/checkout@v3
      with:
        ref: ${{github.head_ref}}
        fetch-depth: 0
        repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
    - name: Build
      run: docker build -t clipshare:ubuntu -f docker/Dockerfile.ubuntu .
    - name: Test
      run: docker run clipshare:ubuntu

  Build-and-Test-on-Fedora:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository code
      uses: actions/checkout@v3
      with:
        ref: ${{github.head_ref}}
        fetch-depth: 0
        repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
    - name: Build
      run: docker build -t clipshare:fedora -f docker/Dockerfile.fedora .
    - name: Test
      run: docker run clipshare:fedora

  Build-and-Test-on-Arch:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository code
      uses: actions/checkout@v3
      with:
        ref: ${{github.head_ref}}
        fetch-depth: 0
        repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
    - name: Build
      run: docker build -t clipshare:arch -f docker/Dockerfile.arch .
    - name: Test
      run: docker run clipshare:arch
